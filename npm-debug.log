0 info it worked if it ends with ok
1 verbose cli [ '/home/ubuntu/.nvm/v0.10.35/bin/node',
1 verbose cli   '/home/ubuntu/.nvm/v0.10.35/bin/npm',
1 verbose cli   'publish',
1 verbose cli   './' ]
2 info using npm@1.4.28
3 info using node@v0.10.35
4 verbose publish [ './' ]
5 verbose cache add [ './', null ]
6 verbose cache add name=undefined spec="./" args=["./",null]
7 verbose parsed url { protocol: null,
7 verbose parsed url   slashes: null,
7 verbose parsed url   auth: null,
7 verbose parsed url   host: null,
7 verbose parsed url   port: null,
7 verbose parsed url   hostname: null,
7 verbose parsed url   hash: null,
7 verbose parsed url   search: null,
7 verbose parsed url   query: null,
7 verbose parsed url   pathname: './',
7 verbose parsed url   path: './',
7 verbose parsed url   href: './' }
8 silly lockFile 0ee6c175- ./
9 verbose lock ./ /home/ubuntu/.npm/0ee6c175-.lock
10 verbose tar pack [ '/home/ubuntu/.npm/seneca-views/0.1.0/package.tgz', './' ]
11 verbose tarball /home/ubuntu/.npm/seneca-views/0.1.0/package.tgz
12 verbose folder ./
13 info prepublish seneca-views@0.1.0
14 silly lockFile 04cb2bca-tar tar://./
15 verbose lock tar://./ /home/ubuntu/.npm/04cb2bca-tar.lock
16 silly lockFile e7c23cc0-m-seneca-views-0-1-0-package-tgz tar:///home/ubuntu/.npm/seneca-views/0.1.0/package.tgz
17 verbose lock tar:///home/ubuntu/.npm/seneca-views/0.1.0/package.tgz /home/ubuntu/.npm/e7c23cc0-m-seneca-views-0-1-0-package-tgz.lock
18 silly lockFile 04cb2bca-tar tar://./
19 silly lockFile 04cb2bca-tar tar://./
20 silly lockFile e7c23cc0-m-seneca-views-0-1-0-package-tgz tar:///home/ubuntu/.npm/seneca-views/0.1.0/package.tgz
21 silly lockFile e7c23cc0-m-seneca-views-0-1-0-package-tgz tar:///home/ubuntu/.npm/seneca-views/0.1.0/package.tgz
22 silly lockFile dbcee930-u-npm-seneca-views-0-1-0-package /home/ubuntu/.npm/seneca-views/0.1.0/package
23 verbose lock /home/ubuntu/.npm/seneca-views/0.1.0/package /home/ubuntu/.npm/dbcee930-u-npm-seneca-views-0-1-0-package.lock
24 silly lockFile dbcee930-u-npm-seneca-views-0-1-0-package /home/ubuntu/.npm/seneca-views/0.1.0/package
25 silly lockFile dbcee930-u-npm-seneca-views-0-1-0-package /home/ubuntu/.npm/seneca-views/0.1.0/package
26 silly lockFile 0ee6c175- ./
27 silly lockFile 0ee6c175- ./
28 silly publish { name: 'seneca-views',
28 silly publish   version: '0.1.0',
28 silly publish   description: 'A views engine for senecajs that renders views as a microservice.  Allows views to be referenced by plugin and name rather than file location making it compatible with multi-process, multi-machine microservices.',
28 silly publish   main: 'index.js',
28 silly publish   directories: { test: 'tests' },
28 silly publish   scripts: { test: 'echo "Error: no test specified" && exit 1' },
28 silly publish   repository:
28 silly publish    { type: 'git',
28 silly publish      url: 'https://github.com/sax1johno/seneca-views' },
28 silly publish   keywords: [ 'seneca', 'views', 'jade' ],
28 silly publish   author: { name: 'John O\'Connor', url: '@sax1johno' },
28 silly publish   license: 'MIT',
28 silly publish   bugs: { url: 'https://github.com/sax1johno/seneca-views/issues' },
28 silly publish   homepage: 'https://github.com/sax1johno/seneca-views',
28 silly publish   dependencies:
28 silly publish    { async: '^1.5.2',
28 silly publish      consolidate: '^0.14.0',
28 silly publish      constantinople: '^3.0.2',
28 silly publish      jade: '^1.11.0',
28 silly publish      seneca: '^1.1.0',
28 silly publish      synchronize: '^0.9.14',
28 silly publish      temp: '^0.8.3',
28 silly publish      underscore: '^1.8.3' },
28 silly publish   readme: 'Seneca Views Engine\n======\n\nA microservice plugin for Senecajs that can be used to render views.  Currently\nuses the JADE rendering engine but new engines are trivial to add.\n\nInstallation\n=======\n``` npm install seneca-views ```\n\nUsage\n=======\nTo use this plugin add the following line to your seneca.js program.\n``` seneca.use(\'views\'); ```\n\nYou can add a view to the views engine by calling the following command:\n\n``` seneca.act({ role: "views", cmd: "add", name: view.name, plugin: view.plugin, ext: view.ext, template: view.template}, ...)```\n\nIn this command, ext means "file extension" which can be used to deduce the rendering engine.  You can\nalso pass in an "engine" signature to override the default deduced engine (ie: using html with swig).\n\nPlugin refers to the namespace of the views for your application.  Using something like "home"\nfor frontend views and "admin" for backend views as your "plugin" allows you to create multiple\nbase views that can be rendered from anywhere.\n\nThe "template" value is a buffer or string that contains the template itself.  Using seneca entities this\ncan be stored in-memory (using mem-store) or in a persistence engine (ie: database or file system).\n\n= JADE considerations\nThe JADE rendering engine is the only one currently pre-packaged into the system.  Jade extends\nand includes work by specifying the layout in the form of "pluginName/templateName".  For example,\nif you\'re extending a common "admin" layout.jade file for all of your backend pages, you can extend\nthat layout by using the following line:\n``` extends admin/layout ```\n\nThe same works for includes:\n\n``` include home/_footer ```\n\nNOTE: the underscore here is just a convention for partials and is not required - any plugin / template\nvalue can be placed here.\n\nThe views in jade are not tied to the filesystem so views can be added and rendered across microservices.\n\nExample Adding Views to the Views Engine\n=====\nIt\'s recommended that you add views in the  "init" method of your seneca plugin.\n\nTo add all of view from a specified folder, you can use the following snippet.\n\n```javascript\n    seneca.add({init:pluginName}, function(args, done) {\n        fs.readdir(path.join(__dirname, "/views"), function(err, files) {\n            if (err) {\n                done(err);\n            } else {\n                async.each(files, function(file, cb) {\n                    if (err) {\n                        cb(err);\n                    } else {\n                        var view = {};\n                        view.plugin = pluginName;\n                        view.ext = require(\'path\').extname(file);\n                        view.name = require(\'path\').basename(file, view.ext);\n                        view.path = path.join(__dirname, "/views", file);\n                        view.template = fs.readFileSync(view.path);\n                        seneca.act({\n                            role: "views",\n                            cmd: "add", \n                            name: view.name,\n                            plugin: view.plugin,\n                            ext: view.ext,\n                            template: view.template\n                        }, function(err, result) {\n                            console.log(result);\n                            if (err) {\n                                cb(err);\n                            } else {\n                                cb();\n                            }\n                        });\n                    }\n                }, function(err) {\n                    if (err) {\n                        done(err);\n                    } else {\n                        done();\n                    }\n                });\n            }\n        }); \n    });\n```\nExample with Express\n=====\nYou can use the views engine to render express views from senecajs by using the standard\nseneca.act method:\n\n```javascript\nrouter.get(\'/dashboard\', routeMiddleware.restrictToLoggedIn, function(req, res){\n    req.seneca.act({\n        "role": "views",\n        "cmd": "render",\n        "plugin": "admin",\n        "name": "dashboard",\n        "locals": {\n            user: req.seneca.user\n        }\n    }, function(err, result) {\n        if (err) {\n            console.log(err);\n            res.status(err.status).send(err.why);\n        } else {\n            res.send(result.html);\n        }\n    });\n    //   res.render(\'dashboard.jade\',{locals:{user:req.seneca.user}});\n});\n```',
28 silly publish   readmeFilename: 'Readme.md',
28 silly publish   gitHead: 'a4394f4cca0b9a267349ea1287622fe18c676d9d',
28 silly publish   _id: 'seneca-views@0.1.0',
28 silly publish   _shasum: '0210f7f0cc78900b80c7e8364eab28d258c32c20',
28 silly publish   _from: './' }
29 verbose request where is /seneca-views
30 verbose request registry https://registry.npmjs.org/
31 verbose request id 1ca9e9244b3fb0e5
32 verbose url raw /seneca-views
33 verbose url resolving [ 'https://registry.npmjs.org/', './seneca-views' ]
34 verbose url resolved https://registry.npmjs.org/seneca-views
35 verbose request where is https://registry.npmjs.org/seneca-views
36 info trying registry request attempt 1 at 21:29:06
37 http PUT https://registry.npmjs.org/seneca-views
38 http 403 https://registry.npmjs.org/seneca-views
39 verbose headers { 'content-type': 'application/json',
39 verbose headers   'cache-control': 'max-age=300',
39 verbose headers   'content-length': '95',
39 verbose headers   'accept-ranges': 'bytes',
39 verbose headers   date: 'Sun, 07 Feb 2016 21:29:08 GMT',
39 verbose headers   via: '1.1 varnish',
39 verbose headers   connection: 'keep-alive',
39 verbose headers   'x-served-by': 'cache-dfw1832-DFW',
39 verbose headers   'x-cache': 'MISS',
39 verbose headers   'x-cache-hits': '0',
39 verbose headers   'x-timer': 'S1454880546.901713,VS0,VE1165' }
40 error publish Failed PUT 403
41 error Error: "You cannot publish over the previously published version 0.1.0." : seneca-views
41 error     at RegClient.<anonymous> (/home/ubuntu/.nvm/v0.10.35/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:308:14)
41 error     at Request._callback (/home/ubuntu/.nvm/v0.10.35/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:246:65)
41 error     at Request.self.callback (/home/ubuntu/.nvm/v0.10.35/lib/node_modules/npm/node_modules/request/request.js:236:22)
41 error     at Request.emit (events.js:98:17)
41 error     at Request.<anonymous> (/home/ubuntu/.nvm/v0.10.35/lib/node_modules/npm/node_modules/request/request.js:1142:14)
41 error     at Request.emit (events.js:117:20)
41 error     at IncomingMessage.<anonymous> (/home/ubuntu/.nvm/v0.10.35/lib/node_modules/npm/node_modules/request/request.js:1096:12)
41 error     at IncomingMessage.emit (events.js:117:20)
41 error     at _stream_readable.js:944:16
41 error     at process._tickCallback (node.js:442:13)
42 error If you need help, you may report this *entire* log,
42 error including the npm and node versions, at:
42 error     <http://github.com/npm/npm/issues>
43 error System Linux 4.2.0-c9
44 error command "/home/ubuntu/.nvm/v0.10.35/bin/node" "/home/ubuntu/.nvm/v0.10.35/bin/npm" "publish" "./"
45 error cwd /home/ubuntu/workspace/app/components/views
46 error node -v v0.10.35
47 error npm -v 1.4.28
48 verbose exit [ 1, true ]
